// Copyright 2024, Horizen Labs, Inc.
// Copyright 2021 0KIMS association.
//
// fflonk_verifier is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// fflonk_verifier is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with fflonk_verifier.  If not, see <http://www.gnu.org/licenses/>.

use fflonk_verifier::{verify, Proof, VerificationKey};
use hex_literal::hex;

#[test]
fn should_verify_valid_proof() {
    let key = VerificationKey::default();
    let data = hex!(
        r#"
        283e3f25323d02dabdb94a897dc2697a3b930d8781381ec574af89a201a91d5a
        2c2808c59f5c736ff728eedfea58effc2443722e78b2eb4e6759a278e9246d60
        0f9c56dc88e043ce0b90c402e96b1f4b1a246f4d0d69a4c340bc910e1f2fd805
        19e465e01bd7629f175931feed102cb6459a1be7b08018b93c142e961d0352d8
        0b8e5d340df28c2f454c5a2535ca01a230bb945ee24b1171481a9a2c6496fed6
        1cf8878e40adb52dc27da5e79718f118467319d15d64fed460d69d951376ac63
        1a6c44faaec76e296b43fe720d700a63fd530f9064878b5f72f2ffe7458c2f03
        1ac6ed8c1e0758dfb3702ed29bbc0c14b5e727c164b3ade07b9f164af0be54b0
        143b1a6534b2dcf2bd660e1b5b420d86c0c350fd9d614b639c5df98009f1375e
        141259679021d0a6a3aa3aae2516bace4a4a651265217ec0ea7c0d7f89b98710
        0abcc93d98ff40bae16eff6c29955f7a37155bb25672b12eb5074dcb7c3e2b00
        1718a257cca21ee593d1ba9f8e91e5168aed8e0b1893e11a6b583d975e747f80
        08a8c2150a04d8f867945ca1740dc3fc3b2fc4daff61b4725fb294435a1b9010
        1803690ae70fc212b7e929de9a22a4642ef4772546cf93ffd1b1196a3d9113a3
        009c506755578932ca3630508ca1ed6ee83df5ec9e26cb0b5800a70967a1a93a
        04d142b6a532935a31d84f75d16929df6d38c3a210ac4f435a8024dfb7e6c1f3
        246d58038a943f237325b44f03d106e523adfec4324615a2dd09e1e5b9143b41
        1c1cf09ee411cf9864d30df4904099920cee9ae8134d45dfeb29e46115d2e740
        098674b8fc2ca31fac6fcc9302860654fdc1b522b7e064b0759bc5924f332fa9
        21121b5af880f83fbce02f19dabb8f684593e7322fb80bfc0d054797b1d4eff4
        11b01bf68f81f2032ae4f7fc514bd76ca1b264f3989a92e6b3d74cda4f8a7149
        20e4c02f5a71082a8bcf5be0b5750a244bd040a776ec541dfc2c8ae73180e924
        0ada5414d66387211eec80d7d9d48498efa1e646d64bb1bf8775b3796a9fd0bf
        0fdf8244018ce57b018c093e2f75ed77d8dbdb1a7b60a2da671de2efe5f6b9d7
        "#
    );
    let proof = Proof::try_from(&data).unwrap();
    let pubs = hex!("0d69b94acdfaca5bacc248a60b35b925a2374644ce0c1205db68228c8921d9d9").into();

    verify(&key.into(), &proof, &pubs).unwrap();
}

#[cfg(feature = "serde")]
#[test]
fn should_verify_snarkjs_proof() {
    use fflonk_verifier::Public;

    let proof: Proof = serde_json::from_str(r#"
        {
            "protocol": "fflonk",
            "curve": "bn128",
            "polynomials": {
                "C1": [
                "19512952758028491405934790115790312944649901939821135923885427424035043432523",
                "14556573045681247107321758464038638460236603165915844088653795891137636966580",
                "1"
                ],
                "C2": [
                "18724765532860887462293740304560312103629598712675774059706825360379977966561",
                "14533846076669948037568538427127727867276686064060198244794640904541487914310",
                "1"
                ],
                "W1": [
                "18433064140714518735926988684235687309803035076187502211354351663568191930935",
                "14788057617464302331557630380512402745218864581677826595197645173223539673357",
                "1"
                ],
                "W2": [
                "16578902799151672151956332367598573028719537462531716854255433720543688684250",
                "21622823131302647207265406578951014306163648459064954245545121280505919027356",
                "1"
                ]
            },
            "evaluations": {
                "ql": "18137169988004520649554381379919736533761028898864355980977573474774839426808",
                "qr": "20404082766518508880627958927869090077251470748406210835504197196401842200720",
                "qm": "707461819326729660985337250976599267781706195992934524838013487904784094085",
                "qo": "18963438173828461591436352330653675208295853959010167304990158722672578932373",
                "qc": "0",
                "s1": "13524886271252282626956626393365051655320699188917745152708417704896009650580",
                "s2": "3174783679655029387130611916286066252438878675967458260277093528819580058722",
                "s3": "21577928273077063144453890504595174724360613180856082038860286291422143482499",
                "a": "10974786676655016445248972047105688770512999913871262036359224483296214498183",
                "b": "21083250626163147629372415164899163984499137689834405549506537520836126119194",
                "c": "18485668148010316467769714971633785148294508157898193267298903173050206942624",
                "z": "16553584390052184118636614382976559370280626167659817002054727638080918750406",
                "zw": "4415347360457194011128422992457486517452412864360300524180855069319812783387",
                "t1w": "14054646597435401354125275990480383598795508549938505679628793738166042203625",
                "t2w": "13096655044313949187605874896346306929343048005668253765142398343590307027689",
                "inv": "7456529870837358461413290055129561230845481425037098795678169994084881795519"
            }
        }
        "#).unwrap();
    let vk: VerificationKey = serde_json::from_str(
        r#"
        {
            "protocol": "fflonk",
            "curve": "bn128",
            "nPublic": 1,
            "power": 11,
            "k1": "2",
            "k2": "3",
            "w": "1120550406532664055539694724667294622065367841900378087843176726913374367458",
            "w3": "21888242871839275217838484774961031246154997185409878258781734729429964517155",
            "w4": "21888242871839275217838484774961031246007050428528088939761107053157389710902",
            "w8": "19540430494807482326159819597004422086093766032135589407132600596362845576832",
            "wr": "2369491970759584452636710321304902931967460429047736379260414030272612059905",
            "X_2": [
                [
                    "21831381940315734285607113342023901060522397560371972897001948545212302161822",
                    "17231025384763736816414546592865244497437017442647097510447326538965263639101"
                ],
                [
                    "2388026358213174446665280700919698872609886601280537296205114254867301080648",
                    "11507326595632554467052522095592665270651932854513688777769618397986436103170"
                ],
                [
                    "1",
                    "0"
                ]
            ],
            "C0": [
                "14083548345943606943399417459394802734806397334765586076624328254510003562122",
                "16034935275787414257017345944930967513154577770502614647348146024009658768590",
                "1"
            ]
        }
        "#,
    )
    .unwrap();
    let pubs: Public =
        hex!("110d778eaf8b8ef7ac10f8ac239a14df0eb292a8d1b71340d527b26301a9ab08").into();

    verify(&vk, &proof, &pubs).unwrap()
}
